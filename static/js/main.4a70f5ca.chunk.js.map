{"version":3,"sources":["Components/Grid/Grid.jsx","Components/Header/Header.jsx","Components/InputWithLabel/InputWithLabel.jsx","Components/SidebarSettings/SidebarSettings.jsx","utils/useLocalStorageState.js","Components/CustomMultiCombobox/CustomMultiCombobox.jsx","Components/ColumnContent/ColumnContent.jsx","App.jsx","store/store.js","index.jsx","utils/textcolor.js"],"names":["Grid","cols","children","className","Header","setSidebarSettingsIsOpen","useStoreActions","actions","sidebarSettingsIsOpen","useStoreState","state","setColsQty","issuesList","items","useState","value","setValue","Text","view","size","weight","ChoiceGroup","onChange","Number","getLabel","item","style","marginLeft","length","Button","iconRight","IconSettings","onlyIcon","onClick","InputWithLabel","defaultValue","labelLeft","labelRight","placeholder","width","onInputChange","as","target","href","TextField","SidebarSettings","closeSidebar","repoOwner","setRepoOwner","repoName","setRepoName","githubToken","setGithubToken","setIssuesList","setRepoLabelsList","fetchErrorResponse","setFetchErrorResponse","isLoading","setIsLoading","key","React","window","localStorage","getItem","setState","useEffect","setItem","useLocalStorageState","localToken","setLocalToken","fetchIssues","a","resultFromAllPages","i","request","headers","authorization","owner","repo","per_page","page","result","data","push","fetchLabels","inputGroup","Sidebar","isOpen","hasOverlay","position","onClickOutside","iconLeft","IconClose","Informer","label","status","SnackBar","onClose","loading","then","catch","err","message","name","autoClose","onAutoClose","CustomMultiCombobox","props","getFilterLabels","repoLabelsList","Array","MultiCombobox","id","options","getOptionLabel","option","ColumnContent","filteredIssues","setFilteredIssues","filterLabels","setFilterLabels","filterResult","filter","issue","arr","filterLabelsList","map","issueLabels","labels","includes","every","filterResultUniqueNumbers","Set","el","number","filterResultUnique","forEach","find","Badge","index","html_url","title","format","Date","created_at","locale","ruLocale","user","login","idx","form","backgroundColor","color","TEXTColor","findTextColor","lineHeight","marginBottom","App","columnsQuantity","colsQty","Theme","preset","presetGpnDefault","innerWidth","model","action","payload","undefined","pull_request","closed_at","store","createStore","ReactDOM","render","StrictMode","document","getElementById","obj","this","resBgColor","rgbArr","module","exports","colorValue","reg","that","test","replace","split","sColor","toLowerCase","sColorNew","slice","concat","sColorChange","parseInt"],"mappings":"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","file":"static/js/main.4a70f5ca.chunk.js","sourcesContent":["import React from 'react';\nimport './Grid.scss';\n\nfunction Grid({ cols, children }) {\n  return (\n    <div className={`Grid Grid_cols_${cols}`}>\n      {children}\n    </div>\n  );\n}\n\nexport default Grid;\n","import React, { useState } from 'react'\nimport './Header.scss'\nimport { Text } from '@consta/uikit/Text'\nimport { Button } from '@consta/uikit/Button'\n// import { Switch } from '@consta/uikit/Switch'\nimport { ChoiceGroup } from '@consta/uikit/ChoiceGroup'\nimport { IconSettings } from '@consta/uikit/IconSettings'\nimport { useStoreActions, useStoreState } from 'easy-peasy'\n// import logo from '../../images/logo.svg'\n\nfunction Header() {\n  const setSidebarSettingsIsOpen = useStoreActions(\n    (actions) => actions.setSidebarSettingsIsOpen\n  )\n  const sidebarSettingsIsOpen = useStoreState(\n    (state) => state.sidebarSettingsIsOpen\n  )\n  const setColsQty = useStoreActions((actions) => actions.setColsQty)\n  const issuesList = useStoreState((state) => state.issuesList)\n  const items = ['2', '3', '4']\n  const [value, setValue] = useState(items[1])\n\n  return (\n    <div className=\"Header\">\n      <div className=\"Header_leftSide\">\n        {/* <img src={logo} alt=\"Consta logo\" className=\"Header_leftSide_logo\" /> */}\n        <Text view=\"brand\" size=\"m\" weight=\"bold\">\n          IssueBoard\n        </Text>\n      </div>\n      <div className=\"Header_rightSide\">\n        <div className=\"Header_rightSide_module\">\n          <Text size=\"s\">Колонок</Text>\n          <ChoiceGroup\n            value={value}\n            onChange={({ value }) => {\n              setValue(value)\n              setColsQty(Number(value))\n            }}\n            items={items}\n            getLabel={(item) => item}\n            size=\"xs\"\n            view=\"ghost\"\n            style={{ marginLeft: 'var(--space-xs)' }}\n          />\n        </div>\n\n        {issuesList && (\n          <div className=\"Header_rightSide_module\">\n            <Text size=\"s\">Загружено ишью {issuesList.length}</Text>\n          </div>\n        )}\n\n        <div className=\"Header_rightSide_module\">\n          <Button\n            view=\"ghost\"\n            // label=\"Что это такое?\"\n            size=\"xs\"\n            iconRight={IconSettings}\n            onlyIcon\n            onClick={() => setSidebarSettingsIsOpen(!sidebarSettingsIsOpen)}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport './InputWithLabel.scss'\nimport { Text } from '@consta/uikit/Text'\nimport { TextField } from '@consta/uikit/TextField'\n\nfunction InputWithLabel({\n  defaultValue,\n  labelLeft,\n  labelRight,\n  placeholder,\n  width,\n  onInputChange,\n}) {\n  const handleChange = ({ value }) => onInputChange(value)\n  return (\n    <div className=\"InputWithLabel\">\n      <div className=\"InputWithLabel_label\">\n        <Text view=\"secondary\" size=\"xs\">\n          {labelLeft}\n        </Text>\n        {labelRight && (\n          <Text\n            view=\"link\"\n            size=\"xs\"\n            as=\"a\"\n            target=\"_blank\"\n            href=\"https://docs.github.com/en/github/authenticating-to-github/creating-a-personal-access-token\"\n          >\n            {labelRight}\n          </Text>\n        )}\n      </div>\n      <TextField\n        onChange={handleChange}\n        value={defaultValue}\n        size=\"m\"\n        placeholder={placeholder}\n        width={width}\n      />\n    </div>\n  )\n}\n\nexport default InputWithLabel\n","import React, { useState } from 'react'\nimport './SidebarSettings.scss'\nimport { Sidebar } from '@consta/uikit/Sidebar'\nimport { Text } from '@consta/uikit/Text'\nimport { Informer } from '@consta/uikit/Informer'\nimport { Button } from '@consta/uikit/Button'\nimport { IconClose } from '@consta/uikit/IconClose'\nimport { SnackBar } from '@consta/uikit/SnackBar'\nimport InputWithLabel from '../InputWithLabel/InputWithLabel'\nimport { useStoreActions, useStoreState } from 'easy-peasy'\nimport { request } from '@octokit/request'\nimport useLocalStorageState from '../../utils/useLocalStorageState'\n\nfunction SidebarSettings() {\n  const setSidebarSettingsIsOpen = useStoreActions(\n    (actions) => actions.setSidebarSettingsIsOpen\n  )\n  const sidebarSettingsIsOpen = useStoreState(\n    (state) => state.sidebarSettingsIsOpen\n  )\n  const closeSidebar = () => setSidebarSettingsIsOpen(!sidebarSettingsIsOpen)\n\n  const repoOwner = useStoreState((state) => state.repoOwner)\n  const setRepoOwner = useStoreActions((actions) => actions.setRepoOwner)\n\n  const repoName = useStoreState((state) => state.repoName)\n  const setRepoName = useStoreActions((actions) => actions.setRepoName)\n\n  const githubToken = useStoreState((state) => state.githubToken)\n  const setGithubToken = useStoreActions((actions) => actions.setGithubToken)\n\n  const setIssuesList = useStoreActions((actions) => actions.setIssuesList)\n\n  const setRepoLabelsList = useStoreActions(\n    (actions) => actions.setRepoLabelsList\n  )\n\n  const [fetchErrorResponse, setFetchErrorResponse] = useState([])\n\n  const [isLoading, setIsLoading] = useState(false)\n\n  const [localToken, setLocalToken] = useLocalStorageState('issBrdGhTkn', null)\n\n  React.useEffect(() => {\n    localToken !== 'null' && setGithubToken(localToken)\n  }, [localToken, setGithubToken])\n\n  const fetchIssues = async (githubToken, repoOwner, repoName) => {\n    let resultFromAllPages = []\n    for (let i = 0; i < 10; i++) {\n      let result = await request('GET /repos/{owner}/{repo}/issues', {\n        headers: {\n          authorization: githubToken,\n        },\n        owner: repoOwner,\n        repo: repoName,\n        per_page: 100,\n        page: i,\n      })\n      if (result.data.length === 0) {\n        break\n      } else {\n        resultFromAllPages.push(...result.data)\n      }\n    }\n    return resultFromAllPages\n  }\n\n  const fetchLabels = async (githubToken, repoOwner, repoName) => {\n    let result = await request('GET /repos/{owner}/{repo}/labels', {\n      headers: {\n        authorization: githubToken,\n      },\n      owner: repoOwner,\n      repo: repoName,\n    })\n    return result.data\n  }\n\n  const inputGroup = [\n    {\n      labelLeft: 'Владелец репозитория',\n      labelRight: null,\n      placeholder: 'Пользователь GitHub или организация',\n    },\n    {\n      labelLeft: 'Название репозитория',\n      labelRight: null,\n      placeholder: 'Название',\n    },\n    {\n      labelLeft: 'Токен GitHub',\n      labelRight: 'Как получить',\n      placeholder: 'Длинный набор букв и цифр',\n    },\n  ]\n\n  return (\n    <Sidebar\n      isOpen={sidebarSettingsIsOpen}\n      hasOverlay\n      position=\"right\"\n      className=\"SidebarSettings\"\n      onClickOutside={closeSidebar}\n    >\n      <div className=\"SidebarSettings_content\">\n        <div>\n          <div className=\"SidebarSettings_mainHeading\">\n            <Text view=\"primary\" weight=\"bold\" size=\"3xl\">\n              IssueBoard\n            </Text>\n            <Button\n              view=\"clear\"\n              iconLeft={IconClose}\n              onlyIcon\n              size=\"s\"\n              onClick={closeSidebar}\n            />\n          </div>\n          <Text\n            view=\"secondary\"\n            size=\"l\"\n            className=\"SidebarSettings_introParagraph\"\n          >\n            IssueBoard — приложение для просмотра ишью в открытых репозиториях\n            GitHub. По умолчанию подключен репозиторий дизайн-системы\n            <Text\n              view=\"link\"\n              size=\"l\"\n              as=\"a\"\n              target=\"_blank\"\n              href=\"http://consta.gazprom-neft.ru\"\n            >\n              {' '}\n              Consta\n            </Text>\n            .\n          </Text>\n          <Informer\n            label=\"Для работы IssueBoard вам понадобится токен GitHub\"\n            view=\"filled\"\n            status=\"system\"\n            className=\"SidebarSettings_informer\"\n          />\n          <InputWithLabel\n            labelLeft={inputGroup[0].labelLeft}\n            labelRight={inputGroup[0].labelRight}\n            placeholder={inputGroup[0].placeholder}\n            width=\"full\"\n            defaultValue={repoOwner}\n            onInputChange={setRepoOwner}\n          />\n          <InputWithLabel\n            labelLeft={inputGroup[1].labelLeft}\n            labelRight={inputGroup[1].labelRight}\n            placeholder={inputGroup[1].placeholder}\n            width=\"full\"\n            defaultValue={repoName}\n            onInputChange={setRepoName}\n          />\n          <InputWithLabel\n            labelLeft={inputGroup[2].labelLeft}\n            labelRight={inputGroup[2].labelRight}\n            placeholder={inputGroup[2].placeholder}\n            width=\"full\"\n            defaultValue={githubToken}\n            onInputChange={setGithubToken}\n          />\n        </div>\n        {fetchErrorResponse.length ? (\n          <SnackBar\n            onClose={() => setFetchErrorResponse([])}\n            items={fetchErrorResponse}\n            className=\"SidebarSettings_snackBar\"\n          />\n        ) : (\n          <Button\n            view=\"primary\"\n            size=\"l\"\n            width=\"full\"\n            label=\"Загрузить issues\"\n            className=\"SidebarSettings_ctaButton\"\n            loading={isLoading}\n            onClick={() => {\n              setIsLoading(true)\n              if (githubToken && repoOwner && repoName) {\n                ;(async () => {\n                  await fetchIssues(githubToken, repoOwner, repoName).then(\n                    (data) => {\n                      setIssuesList(data)\n                    }\n                  )\n                  await fetchLabels(githubToken, repoOwner, repoName).then(\n                    (data) => {\n                      setRepoLabelsList(data)\n                    }\n                  )\n                })()\n                  .then(async () => {\n                    setLocalToken(githubToken)\n                    await setIsLoading(false)\n                    await setSidebarSettingsIsOpen(false)\n                  })\n                  .catch((err) => {\n                    setFetchErrorResponse([\n                      {\n                        key: 1,\n                        message: `${err.name} ${err.status}`,\n                        status: 'alert',\n                        autoClose: 3,\n                        onAutoClose: () => {\n                          setFetchErrorResponse([])\n                        },\n                      },\n                    ])\n                    setIsLoading(false)\n                  })\n              } else {\n                setFetchErrorResponse([\n                  {\n                    key: 1,\n                    message: 'Не указан один из параметров запроса',\n                    status: 'alert',\n                    autoClose: 3,\n                    onAutoClose: () => {\n                      setFetchErrorResponse([])\n                    },\n                  },\n                ])\n                setIsLoading(false)\n              }\n            }}\n          />\n        )}\n      </div>\n    </Sidebar>\n  )\n}\n\nexport default SidebarSettings\n","import React from 'react'\n\nexport default function useLocalStorageState(key, defaultValue = '') {\n  const [state, setState] = React.useState(\n    () => window.localStorage.getItem(key) || defaultValue\n  )\n\n  React.useEffect(() => {\n    window.localStorage.setItem(key, state)\n  }, [key, state])\n\n  return [state, setState]\n}\n","import React, { useState, useEffect } from 'react'\nimport { useStoreState } from 'easy-peasy'\nimport { MultiCombobox } from '@consta/uikit/MultiCombobox'\n\nfunction CustomMultiCombobox(props) {\n  const { getFilterLabels } = props\n  const [value, setValue] = useState(null)\n  const getItemLabel = (option) => option.label\n  const repoLabelsList = useStoreState((state) => state.repoLabelsList)\n\n  useEffect(() => {\n    if (value === null) {\n      getFilterLabels(null)\n    }\n    if (value instanceof Array) {\n      value.length === 0 ? getFilterLabels(null) : getFilterLabels(value)\n    }\n  }, [getFilterLabels, value])\n\n  return (\n    <MultiCombobox\n      id=\"filter\"\n      options={repoLabelsList}\n      getOptionLabel={getItemLabel}\n      size=\"s\"\n      onChange={setValue}\n      value={value}\n    />\n  )\n}\n\nexport default CustomMultiCombobox\n","import React, { useState, useEffect } from 'react'\nimport './ColumnContent.scss'\nimport { useStoreState } from 'easy-peasy'\nimport { Text } from '@consta/uikit/Text'\nimport { Badge } from '@consta/uikit/Badge'\nimport TEXTColor from '../../utils/textcolor'\nimport { format } from 'date-fns'\nimport ruLocale from 'date-fns/locale/ru'\nimport CustomMultiCombobox from '../CustomMultiCombobox/CustomMultiCombobox'\n\nfunction ColumnContent() {\n  const [filteredIssues, setFilteredIssues] = useState(null)\n  const [filterLabels, setFilterLabels] = useState(null)\n  const issuesList = useStoreState((state) => state.issuesList)\n  const repoLabelsList = useStoreState((state) => state.repoLabelsList)\n  const getFilterLabels = (labels) => setFilterLabels(labels)\n\n  useEffect(() => {\n    // фильтрует список ишью по входящим лейблам из мультикомбобокса\n    const filterIssues = (issue) => {\n      const checker = (arr, target) =>\n        target.every((item) => arr.includes(item))\n      let filterLabelsList = filterLabels.map((value) => value.label)\n      let issueLabels = issue.labels.map((item) => item.name)\n      // выбирает ишью без лейблов\n      if (filterLabelsList.includes('_no label') && issue.labels.length === 0) {\n        return true\n      }\n      // выбирает ишью без лейблов\n      return checker(issueLabels, filterLabelsList) ? true : false\n    }\n    if (issuesList !== null && filterLabels !== null) {\n      let filterResult = issuesList.filter(filterIssues)\n\n      // удаляет дубликаты после фильтрации\n      let filterResultUniqueNumbers = new Set([\n        ...filterResult.map((el) => el.number),\n      ])\n      let filterResultUnique = []\n      filterResultUniqueNumbers.forEach((el) => {\n        filterResultUnique.push(filterResult.find((item) => item.number === el))\n      })\n      // удаляет дубликаты после фильтрации\n\n      setFilteredIssues(filterResultUnique)\n    }\n    if (filterLabels === null) {\n      setFilteredIssues(null)\n    }\n  }, [filterLabels, issuesList])\n\n  return (\n    <div className=\"ColumnContent\">\n      <div className=\"ColumnContent_controls\">\n        <CustomMultiCombobox\n          items={repoLabelsList}\n          getFilterLabels={getFilterLabels}\n        />\n        <Badge\n          status=\"system\"\n          label={filteredIssues ? filteredIssues.length : '-'}\n        />\n      </div>\n\n      <div className=\"ColumnContent_content\">\n        {filteredIssues != null &&\n          filteredIssues.map((item, index) => {\n            return (\n              <div className=\"ColumnContent_card\" key={index}>\n                <Text\n                  size=\"s\"\n                  view=\"primary\"\n                  weight=\"semibold\"\n                  className=\"ColumnContent_card_heading\"\n                  as=\"a\"\n                  href={item.html_url}\n                  target=\"_blank\"\n                >\n                  {item.title}\n                </Text>\n                <Text\n                  size=\"xs\"\n                  view=\"secondary\"\n                  className=\"ColumnContent_card_subHeading\"\n                >\n                  #{item.number} создано{' '}\n                  {format(new Date(item.created_at), 'dd MMM yyyy', {\n                    locale: ruLocale,\n                  })}\n                  {'  '}\n                  <Text\n                    size=\"xs\"\n                    view=\"secondary\"\n                    weight=\"semibold\"\n                    as=\"a\"\n                    target=\"_blank\"\n                    href={item.user.html_url}\n                  >\n                    {item.user.login}\n                  </Text>\n                </Text>\n                <div className=\"ColumnContent_card_badgeGroup\">\n                  {item.labels.map((item, idx) => (\n                    <Badge\n                      key={idx}\n                      size=\"s\"\n                      form=\"round\"\n                      label={item.name}\n                      className=\"ColumnContent_card_badgeGroup_badge\"\n                      style={{\n                        backgroundColor: '#' + item.color,\n                        color: TEXTColor.findTextColor('#' + item.color) + '',\n                      }}\n                    />\n                  ))}\n                </div>\n              </div>\n            )\n          })}\n\n        {filteredIssues === null && (\n          <div className=\"ColumnContent_centerWrapper\">\n            <Text size=\"xs\" view=\"ghost\">\n              Выбери фильтр\n            </Text>\n          </div>\n        )}\n\n        {filteredIssues instanceof Array && filteredIssues.length === 0 && (\n          <div className=\"ColumnContent_centerWrapper\">\n            <div>\n              <Text\n                size=\"m\"\n                lineHeight=\"m\"\n                view=\"ghost\"\n                style={{ marginBottom: 'var(--space-xs)' }}\n              >\n                ¯\\_(ツ)_/¯\n              </Text>\n              <Text size=\"xs\" lineHeight=\"xs\" view=\"ghost\">\n                По\n                {filterLabels != null && filterLabels.length > 1\n                  ? ' выбранным фильтрам'\n                  : ' выбранному фильтру'}\n                <br /> результатов нет\n              </Text>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default ColumnContent\n","import React from 'react'\nimport './App.scss'\nimport { Theme, presetGpnDefault } from '@consta/uikit/Theme'\nimport { Text } from '@consta/uikit/Text'\nimport Grid from './Components/Grid/Grid'\nimport Header from './Components/Header/Header'\nimport SidebarSettings from './Components/SidebarSettings/SidebarSettings'\nimport { useStoreState } from 'easy-peasy'\nimport ColumnContent from './Components/ColumnContent/ColumnContent'\n\nfunction App() {\n  const sidebarSettingsIsOpen = useStoreState(\n    (state) => state.sidebarSettingsIsOpen\n  )\n  const columnsQuantity = useStoreState((state) => state.colsQty)\n\n  return (\n    <Theme preset={presetGpnDefault}>\n      {window.innerWidth < 1000 ? (\n        <div className=\"placeholder\">\n          <Text size=\"m\" view=\"secondary\">\n            Давайте на десктоп\n          </Text>\n        </div>\n      ) : (\n        <div style={{ backgroundColor: 'var(--color-bg-primary)' }}>\n          {sidebarSettingsIsOpen && <SidebarSettings />}\n          <Header />\n          <div className=\"App\">\n            <Grid cols={columnsQuantity}>\n              {[...new Array(columnsQuantity)].map((item, index) => {\n                return <ColumnContent key={index} />\n              })}\n            </Grid>\n          </div>\n        </div>\n      )}\n    </Theme>\n  )\n}\nexport default App\n","import { createStore, action } from 'easy-peasy'\n// import stateIssuesList from './issues'\n// import labels from './labels'\n\nconst model = {\n  sidebarSettingsIsOpen: true,\n  setSidebarSettingsIsOpen: action((state, payload) => {\n    state.sidebarSettingsIsOpen = payload\n  }),\n\n  repoOwner: 'gazprom-neft',\n  setRepoOwner: action((state, payload) => {\n    state.repoOwner = payload\n  }),\n\n  repoName: 'consta-uikit',\n  setRepoName: action((state, payload) => {\n    state.repoName = payload\n  }),\n\n  githubToken: null,\n  // githubToken: '1cd97e52c01a37b55de70a16809a3d56273d1a40',\n  setGithubToken: action((state, payload) => {\n    state.githubToken = payload\n  }),\n\n  issuesList: null,\n  // issuesList: stateIssuesList\n  //   .filter((item) => item.pull_request === undefined)\n  //   .filter((item) => item.closed_at === null),\n  setIssuesList: action((state, payload) => {\n    state.issuesList = [\n      // https://docs.github.com/en/rest/reference/issues#list-repository-issues\n      // note bout v3\n      ...payload\n        .filter((item) => item.pull_request === undefined)\n        .filter((item) => item.closed_at === null),\n    ]\n  }),\n\n  repoLabelsList: [],\n  // repoLabelsList: [\n  //   { label: '_no label', value: 'no label' },\n  //   ...labels.map((item) => {\n  //     return { label: item.name, value: item.id + '' }\n  //   }),\n  // ],\n  setRepoLabelsList: action((state, payload) => {\n    state.repoLabelsList = [\n      { label: '_no label', value: 'no label' },\n      ...payload.map((item) => {\n        return { label: item.name, value: item.id + '' }\n      }),\n    ]\n  }),\n\n  colsQty: 3,\n  setColsQty: action((state, payload) => {\n    state.colsQty = payload\n  }),\n}\n\nconst store = createStore(model)\nexport default store\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { StoreProvider } from 'easy-peasy'\nimport store from './store/store'\n\nReactDOM.render(\n  <StoreProvider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </StoreProvider>,\n  document.getElementById('root')\n);\n","(function() {\n\n    var root = this;\n\n    var TEXTColor = function(obj) {\n        if(obj instanceof TEXTColor) return obj;\n        if(!(this instanceof TEXTColor)) return new TEXTColor(obj);\n    }\n\n    if(typeof exports !== 'undefined') {\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = TEXTColor;\n        }\n        exports.TEXTColor = TEXTColor;\n    } else {\n        root.TEXTColor = TEXTColor;\n    }\n\n    function resBgColor(rgbArr) {\n        var color = 0.213 * rgbArr[0] + 0.715 * rgbArr[1] + 0.072 * rgbArr[2] > 255 / 2;\n        return color? '#000000': '#ffffff'\n    };\n\n    TEXTColor.findTextColor = function findTextColor(colorValue) {\n        const reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/;\n        var that = colorValue;\n        if (/^(rgb|RGB)/.test(that)) {\n            var aColor = that.replace(/(?:\\(|\\)|rgb|RGB)*/g, \"\").split(\",\");\n            return resBgColor(aColor);\n        } else if (reg.test(that)) {\n            var sColor = colorValue.toLowerCase();\n            if (sColor && reg.test(sColor)) {\n                if (sColor.length === 4) {\n                var sColorNew = \"#\";\n                for (var i = 1; i < 4; i += 1) {\n                    sColorNew += sColor.slice(i, i + 1).concat(sColor.slice(i, i + 1));\n                }\n                sColor = sColorNew;\n            }\n            var sColorChange = [];\n            for (var i = 1; i < 7; i += 2) {\n                sColorChange.push(parseInt(\"0x\" + sColor.slice(i, i + 2)));\n            }\n            return resBgColor(sColorChange);\n            } else {\n                return false;\n            }\n        } else {\n            return false;\n        }\n    }\n\n    // if (typeof define === 'function' && define.amd) {\n    //     define('color-js' ,[], function() {\n    //         return TEXTColor;\n    //     });\n    // }\n})();"],"sourceRoot":""}